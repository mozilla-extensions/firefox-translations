/* eslint-disable */

/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

// AUTOGENERATED BY glean_parser. DO NOT EDIT. DO NOT COMMIT.

import StringMetricType from "@mozilla/glean/webext/private/metrics/string";
import QuantityMetricType from "@mozilla/glean/webext/private/metrics/quantity";
/**
 * Translation source language.
 *
 * Generated from `metadata.from_lang`.
 */
export const fromLang = new StringMetricType({
  category: "metadata",
  name: "from_lang",
  sendInPings: ["custom"],
  lifetime: "ping",
  disabled: false,
});

/**
 * Translation target language.
 *
 * Generated from `metadata.to_lang`.
 */
export const toLang = new StringMetricType({
  category: "metadata",
  name: "to_lang",
  sendInPings: ["custom"],
  lifetime: "ping",
  disabled: false,
});

/**
 * Firefox Telemetry client id.
 *
 * Generated from `metadata.firefox_client_id`.
 */
export const firefoxClientId = new StringMetricType({
  category: "metadata",
  name: "firefox_client_id",
  sendInPings: ["custom"],
  lifetime: "ping",
  disabled: false,
});

/**
 * Extension version
 *
 * Generated from `metadata.extension_version`.
 */
export const extensionVersion = new StringMetricType({
  category: "metadata",
  name: "extension_version",
  sendInPings: ["custom"],
  lifetime: "ping",
  disabled: false,
});

/**
 * Extension build id, indicating which git revision
 * and build config was used to produce this build
 *
 * Generated from `metadata.extension_build_id`.
 */
export const extensionBuildId = new StringMetricType({
  category: "metadata",
  name: "extension_build_id",
  sendInPings: ["custom"],
  lifetime: "ping",
  disabled: false,
});

/**
 * Bergamot translator engine version
 *
 * Generated from `metadata.bergamot_translator_version`.
 */
export const bergamotTranslatorVersion = new StringMetricType({
  category: "metadata",
  name: "bergamot_translator_version",
  sendInPings: ["custom"],
  lifetime: "ping",
  disabled: false,
});

/**
 * Telemetry Environment `memoryMB` metric
 *
 * Generated from `metadata.system_memory`.
 */
export const systemMemory = new QuantityMetricType({
  category: "metadata",
  name: "system_memory",
  sendInPings: ["custom"],
  lifetime: "ping",
  disabled: false,
});

/**
 * Telemetry Environment `cpu.cores` metric
 *
 * Generated from `metadata.cpu_cores_count`.
 */
export const cpuCoresCount = new QuantityMetricType({
  category: "metadata",
  name: "cpu_cores_count",
  sendInPings: ["custom"],
  lifetime: "ping",
  disabled: false,
});

/**
 * Telemetry Environment `cpu.speedMHz` metric
 *
 * Generated from `metadata.cpu_speed`.
 */
export const cpuSpeed = new QuantityMetricType({
  category: "metadata",
  name: "cpu_speed",
  sendInPings: ["custom"],
  lifetime: "ping",
  disabled: false,
});
